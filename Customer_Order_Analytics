#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customers and order data.

-- How many unique orders were placed in January
SELECT COUNT(DISTINCT orderID) 
FROM BIT_DB.JanSales
WHERE length(orderID) = 6 
AND orderID <> 'Order ID';
       
-- How many of those orders were for an iPhone?
SELECT COUNT(DISTINCT orderID) 
FROM BIT_DB.JanSales
WHERE length(orderID) = 6 
AND orderID <> 'Order ID'
AND Product = 'iPhone';
       
-- Select the customer account numbers for all the orders that were placed in February
SELECT DISTINCT cust.acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales feb ON cust.order_id = feb.orderID
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';
       
-- Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT product
,price
FROM BIT_DB.JanSales
GROUP BY product, price
ORDER BY price asc LIMIT 1
;

--The previous question had multiple ways to answer it. The following was not my instinctual solution, but I am adding it here as a reminder of nested queries and their funcitons:
SELECT DISTINCT product
,price
FROM BIT_DB.JanSales
WHERE price
IN(SELECT MIN(price)FROM BIT_DB.JanSales)
;
--What is the total revenue for each product sold in January
SELECT SUM(Quantity)*price AS revenue
,product
FROM BIT_DB.JanSales
Where PRODUCT <>''
AND PRODUCT<>'Product'
GROUP BY product
;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product
,SUM(quantity)
,SUM(quantity)*price AS revenue
FROM BIT_DB.FebSales
WHERE PRODUCT <>''
AND PRODUCT<>'Product'
AND location='548 Lincoln St, Seattle, WA 98101'
GROUP BY product
;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT
count(DISTINCT cust.acctnum)
,avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE feb.Quantity>2
AND length(orderid=6)
AND orderid<>'Order ID'
;

--List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product
,SUM(quantity)
,location
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product
;

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT COUNT(orderID),location
FROM BIT_DB.JanSales
WHERE orderID <> 'Order ID'
AND length(orderID)=6
AND location LIKE '%NY%'
GROUP BY location
HAVING Count(orderID)>=3
;

--How many of each type of headphone were sold in February?
SELECT SUM(quantity) as quantity, product
FROM BIT_DB.JanSales
WHERE product LIKE '%headphone%'
GROUP BY product
;

--What was the average amount spent per account in February?
SELECT AVG(quantity*price) as avg_spend_per_acct
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderID=cust.order_id
WHERE orderID <> 'Order ID'
AND length(orderID)=6
;

--What was the average quantity of products purchased per account in February?
SELECT SUM(Feb.quantity)/COUNT(cust.acctnum) as avg_qty_per_acct
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderID=cust.order_id
WHERE orderID <> 'Order ID'
AND length(orderID)=6
;

--Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT SUM(price*quantity),product
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY SUM(price*quantity) desc
LIMIT 1
;
